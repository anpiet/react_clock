{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","intervalId","this","window","setInterval","setState","prevProps","prevState","name","props","console","debug","info","toUTCString","slice","clearInterval","className","React","Component","getRandomName","value","now","toString","App","clockName","hasClock","timerId","RemoveClock","event","preventDefault","ShowClock","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAWaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,WAAa,EALf,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,WAAaE,OAAOC,aAAY,WACnC,IAAML,EAAQ,IAAIC,KAElB,EAAKK,SAAS,CAAEN,YACf,OAZP,gCAeE,SACEO,EAAiCC,GAE7BD,EAAUE,OAASN,KAAKO,MAAMD,MAChCE,QAAQC,MAAR,uBAA8BL,EAAUE,KAAxC,eAAmDN,KAAKO,MAAMD,OAG5DD,EAAUR,QAAUG,KAAKJ,MAAMC,OACjCW,QAAQE,KAAKV,KAAKJ,MAAMC,MAAMc,cAAcC,OAAO,IAAK,MAvB9D,kCA2BE,WACEX,OAAOY,cAAcb,KAAKD,cA5B9B,oBA+BE,WACE,IAAQF,EAAUG,KAAKJ,MAAfC,MACAS,EAASN,KAAKO,MAAdD,KAER,OACE,sBAAKQ,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGR,IAEF,YACD,sBAAMQ,UAAU,cAAhB,SACGjB,EAAMc,cAAcC,OAAO,IAAK,YA1C3C,GAA2BG,IAAMC,WCNjC,SAASC,IACP,IAAMC,EAAQpB,KAAKqB,MAAMC,WAAWR,OAAO,GAE3C,MAAM,SAAN,OAAgBM,GAQX,IAAMG,EAAb,4MACEzB,MAAQ,CACN0B,UAAW,UACXC,UAAU,GAHd,EAMEC,QAAUvB,OAAOC,aAAY,WAC3B,EAAKC,SAAS,CAAEmB,UAAWL,QAC1B,MARL,EAoBEQ,YAAc,SAACC,GACbA,EAAMC,iBACN,EAAKxB,SAAS,CAAEoB,UAAU,KAtB9B,EAyBEK,UAAY,WACV,EAAKzB,SAAS,CAAEoB,UAAU,KA1B9B,uDAUE,WACEM,SAASC,iBAAiB,cAAe9B,KAAKyB,aAC9CI,SAASC,iBAAiB,QAAS9B,KAAK4B,aAZ5C,kCAeE,WACEC,SAASE,oBAAoB,cAAe/B,KAAKyB,aACjDI,SAASE,oBAAoB,QAAS/B,KAAK4B,aAjB/C,oBA6BE,WACE,MAAgC5B,KAAKJ,MAA7B0B,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAEnB,OACE,sBAAKT,UAAU,MAAf,UACE,6CAECS,GAAY,cAAC,EAAD,CAAOjB,KAAMgB,WApClC,GAAyBP,IAAMC,WCb/BgB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.7b3e051b.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\n\ntype State = {\n  today: Date,\n};\n\ntype ClockProps = {\n  name: string,\n};\n\nexport class Clock extends React.Component<ClockProps, State> {\n  state = {\n    today: new Date(),\n  };\n\n  intervalId = 0;\n\n  componentDidMount() {\n    this.intervalId = window.setInterval(() => {\n      const today = new Date();\n\n      this.setState({ today });\n    }, 1000);\n  }\n\n  componentDidUpdate(\n    prevProps: Readonly<ClockProps>, prevState: Readonly<State>,\n  ) {\n    if (prevProps.name !== this.props.name) {\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n\n    if (prevState.today !== this.state.today) {\n      console.info(this.state.today.toUTCString().slice(-12, -4));\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.intervalId);\n  }\n\n  render() {\n    const { today } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n        {' time is '}\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","/* eslint-disable no-console */\nimport React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string,\n  hasClock: boolean,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId = window.setInterval(() => {\n    this.setState({ clockName: getRandomName() });\n  }, 3300);\n\n  componentDidMount(): void {\n    document.addEventListener('contextmenu', this.RemoveClock);\n    document.addEventListener('click', this.ShowClock);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('contextmenu', this.RemoveClock);\n    document.removeEventListener('click', this.ShowClock);\n  }\n\n  RemoveClock = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  ShowClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock name={clockName} />}\n\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}